apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-deployment
  namespace: ico-system
  labels:
    app: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
        - name: gateway
          image: "10.1.10.212:8082/egrand-cloud-deploy/kubeico-cluster-gateway:v1.0"
          command:
            - ./apiserver
            - --secure-port=9443
            - --kubeconfig=/config/kubectl-config
            - --authorization-kubeconfig=/config/kubectl-config
            - --authentication-kubeconfig=/config/kubectl-config
            - --secret-namespace=ico-system
            - --feature-gates=APIPriorityAndFairness=false
          ports:
            - containerPort: 9443
          volumeMounts:
            - mountPath: /config/
              mountPropagation: HostToContainer
              name: kubectl-config
      volumes:
        - configMap:
            items:
              - key: kubectl-config
                path: kubectl-config
            name: kubeico-gateway-config
          name: kubectl-config
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-service
  namespace: ico-system
spec:
  selector:
    app: gateway
  ports:
    - protocol: TCP
      port: 9443
      targetPort: 9443
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.cluster.core.egd.dev
  labels:
    api: cluster-extension-apiserver
    apiserver: "true"
spec:
  version: v1alpha1
  group: cluster.core.egd.dev
  groupPriorityMinimum: 2000
  service:
    name: gateway-service
    namespace: ico-system
    port: 9443
  versionPriority: 10
  insecureSkipTLSVerify: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: system::extension-apiserver-authentication-reader:cluster-gateway
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - kind: ServiceAccount
    name: default
    namespace: ico-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: ico-system
  name: cluster-gateway-secret-reader
rules:
  - apiGroups:
      - ""
    resources:
      - "secrets"
      - "namespaces"
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cluster-gateway-secret-reader
  namespace: ico-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cluster-gateway-secret-reader
subjects:
  - kind: ServiceAccount
    name: default
    namespace: ico-system